.projects{
    padding-bottom: 2rem;

    &__bio-image{
        height: 50vh;
        width: 100%;
        background: 
            linear-gradient(
                to right,
                // First gradient color with opacity
                rgba($primary-color, 0.8),
                // Second gradient color with opacity
                rgba($primary-color, 0.2)
            ),
            url('https://github.com/vanessabau/daily-practice/blob/master/mexico-photo.jpg?raw=true') center top;
        background-repeat: no-repeat;
        background-size: cover;
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-end;

       .text-secondary{
           font-size: 2rem;
           margin-bottom: 2rem;
       }
    }


    &__items {
        width: 50vw;
        margin: 2rem auto 0 auto;
        display: grid;
        grid-template-columns: 1fr;
        grid-gap: 2rem;

        
    }

    &__item{
        position: relative;
        border-bottom: 5px solid $secondary-color;
        overflow: hidden;
        cursor: pointer;

        img{
            width: 100%;
        }

        // Create an overlay with a pseudo element
        &::after {
            content: '';
            position: absolute;
            top: 100%;
            left: 0;
            height: 100%;
            width: 100%;
            background: $secondary-color;
            opacity: 0;
            @include transition-ease;
        }

        &:hover {
            // Target pseudo element that creates a colored overlay on hover of our items
            &::after {
                top: 0;
                opacity: 0.9;
            }

            // Make the buttons appear on hover (they start opacity 0)
            .projects__btn {
                opacity: 1;
            }
        }
    }

&__btns {
    position: absolute;
    top: 0;
    height: 100%;
    width: 100%;
    z-index: 1;
    display: grid;
    // These are always in a 2 column layout; We are telling ours to repeat twice, 1 fractional unit
    grid-template-columns: repeat(2, 1fr);
    align-items: center;
    text-align: center;
}

&__btn {
    opacity: 0;
    color: set-text-color($secondary-color);
    @include transition-ease;

    &:hover {
        // wrap set-text-color in anouther set-text-color to return the opposite value (black)
        color: set-text-color(set-text-color($secondary-color));
    }
}

    .social-icons {
        display: flex;
        flex-direction: column;
    }

    footer {
        transform:
            rotate(90deg)
            // x then y values, this flips the footer and puts it on its side
            translate(-3rem, -5rem);
    }
    
}